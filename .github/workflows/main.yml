name: CI-CD

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo código fonte
        uses: actions/checkout@v3

      - name: Autenticação no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Construindo e publicando imagem Docker
        uses: docker/build-push-action@v3
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/aula-primeira-pipeline:v${{ github.run_number }}
            ${{ secrets.DOCKERHUB_USERNAME }}/aula-primeira-pipeline:latest

  CD:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Autenticando no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Autenticando no Heroku Container Registry
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Configurando e publicando no Heroku
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/aula-primeira-pipeline:v${{ github.run_number }}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/aula-primeira-pipeline:v${{ github.run_number }} registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Liberando contêiner no Heroku
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
